{"version":3,"sources":["components/Task.ts","components/TaskItem.tsx","components/DayItem.tsx","components/Form.tsx","components/App.tsx","index.tsx"],"names":["Task","id","title","time","completed","this","TaskItem","className","DayItem","Form","showModal","setShowModal","tasks","setTasks","isEditing","useState","setTitle","setTime","onSubmit","e","preventDefault","type","onChange","target","value","onClick","newTasks","map","t","editTask","nanoid","FILTER_MAP","all","active","task","filterkeys","Object","keys","initialState","App","setFilter","setIsEditing","filterkey","filter","handleChangeCompleteTask","deleteTask","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d475f45b.chunk.js","sourcesContent":["class Task {\r\n    id: string\r\n    title: string\r\n    time: string\r\n    completed: boolean\r\n    constructor(id: string, title: string, time: string, completed: boolean) {\r\n        this.id = id\r\n        this.title = title\r\n        this.time = time\r\n        this.completed = completed\r\n    }\r\n}\r\n\r\nexport default Task","\r\nconst TaskItem = ({ id, title, time, completed }: { id: string, title: string, time: string, completed: boolean }) => {\r\n    return (\r\n        <div className=\"task\">\r\n            <span>{completed ? <i className=\"fas fa-check-circle\"></i> : <i className=\"far fa-circle\"></i>}</span>\r\n            <div className=\"task-card\">\r\n                <p className=\"title\" id={`task-${id}`}>{title}</p>\r\n                <p className=\"time\">{time}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskItem\r\n","const DayItem = () => {\r\n    return (\r\n        <div className=\"card-day\">\r\n            <p className=\"day\">Mon</p>\r\n            <p className=\"num\" >26</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DayItem","import { useState } from \"react\"\r\nimport { nanoid } from \"nanoid\"\r\nimport Task from \"./Task\"\r\n\r\nconst Form = (\r\n    { showModal, setShowModal, tasks, setTasks, isEditing }:\r\n        { showModal: string, setShowModal: any, tasks: Task[], setTasks: any, isEditing: boolean }\r\n) => {\r\n\r\n    const [title, setTitle] =  useState('')\r\n    const [time, setTime] = useState(isEditing ? '00:00' : '')\r\n\r\n    const addNewTask = () => {\r\n        setTasks([new Task(nanoid(3), title, time, false), ...tasks])\r\n        setShowModal('hidde')\r\n        setTitle('')\r\n        setTime('')\r\n    }\r\n\r\n    const editTask = (id: string) => {\r\n        const newTasks = tasks.map(t => {\r\n            if (t.id === id)\r\n                return {...t, title: title, time: time}\r\n            return t\r\n        })\r\n        setTasks(newTasks)\r\n        setShowModal('hidde')\r\n        setTitle('')\r\n        setTime('')\r\n    }\r\n\r\n    return (\r\n        <section className={`modal ${showModal}`}>\r\n            <form onSubmit={(e) => e.preventDefault()}>\r\n                <p>{!isEditing ? 'New' : 'Edit'} Task</p>\r\n                <div className=\"inputs\">\r\n                    <input type=\"text\" onChange={(e) => setTitle(e.target.value)} id=\"myTask\" value={title} />\r\n                    <input type=\"time\" onChange={(e) => setTime(e.target.value)} id=\"myTime\" value={time} />\r\n                </div>\r\n                <div className=\"options\">\r\n                    {!isEditing ? \r\n                        <button onClick={addNewTask}>Add</button> :\r\n                        <button onClick={() => editTask('0')}>Edit</button>\r\n                    }\r\n                    <button onClick={() => setShowModal('hidde')} >Cancel</button>\r\n                </div>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import { useState } from \"react\"\r\nimport \"../sass/App.scss\"\r\nimport Task from \"./Task\"\r\nimport TaskItem from \"./TaskItem\"\r\nimport DayItem from \"./DayItem\"\r\nimport Form from \"./Form\"\r\n\r\nconst FILTER_MAP = {\r\n    all: () => true,\r\n    active: (task: Task) => !task.completed,\r\n    completed: (task: Task) => task.completed\r\n}\r\nconst filterkeys = Object.keys(FILTER_MAP);\r\n\r\nconst initialState = [\r\n    new Task('0', 'leer pdf false', '05:00 PM', true),\r\n    new Task('1', 'leer pdf true', '08:00 PM', false),\r\n    new Task('3', 'leer pdf false', '10:00 PM', true)\r\n]\r\n\r\nconst App = () => {\r\n\r\n    const [tasks, setTasks] = useState(initialState)\r\n    const [filter, setFilter] = useState('all')\r\n    const [showModal, setShowModal] = useState('hidde')\r\n    const [isEditing, setIsEditing] = useState(false)\r\n\r\n    const handleChangeCompleteTask = (id: string) => {\r\n        const newTasks = tasks.map(task => {\r\n            if(task.id === id) \r\n                return {...task, completed: !task.completed}\r\n            return task\r\n        })\r\n        setTasks(newTasks)\r\n    }\r\n\r\n    const deleteTask = (id: string) => {\r\n        const newTasks = tasks.filter(task => task.id !== id)\r\n        setTasks(newTasks)\r\n    }\r\n\r\n    const handleShowModalAdd = () => {\r\n        setShowModal(showModal === 'hidde' ? '' : 'hidde')\r\n        setIsEditing(false)\r\n    }\r\n\r\n    const handleShowModalEdit = () => {\r\n        setShowModal(showModal === 'hidde' ? '' : 'hidde')\r\n        setIsEditing(true)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header>Hello Alan,</header>\r\n            <section className=\"calendar\">\r\n                <p className=\"month\">April</p>\r\n                <section className=\"cards-days\">\r\n                    <DayItem />\r\n                    <DayItem />\r\n                    <DayItem />\r\n                    <DayItem />\r\n                    <DayItem />\r\n                </section>\r\n            </section>\r\n            <section className=\"card-tasks\">\r\n                <p className=\"num-tasks\">Tasks</p>\r\n                <section className=\"filters\">\r\n                    {filterkeys.map(filterkey =>(\r\n                        <button key={filterkey} onClick={() => setFilter(filterkey)}>{filterkey}</button>\r\n                    ))}\r\n                </section>\r\n                <section className=\"tasks\">\r\n                    {tasks.filter(FILTER_MAP['all']).map(({id, title, time, completed}) => (\r\n                        <TaskItem key={id} id={id} title={title} time={time} completed={completed}/>\r\n                    ))}\r\n                </section>\r\n            </section>\r\n            <div className=\"btn\">\r\n                <button onClick={handleShowModalAdd} ><i className=\"fas fa-plus\"></i></button>\r\n                <button onClick={() => handleChangeCompleteTask('0')}><i className=\"fas fa-check\"></i></button>\r\n                <button onClick={() => deleteTask('0')}><i className=\"fas fa-trash-alt\"></i></button>\r\n                <button onClick={handleShowModalEdit}><i className=\"fas fa-edit\"></i></button>\r\n            </div>\r\n            <Form showModal={showModal} setShowModal={setShowModal} tasks={tasks} setTasks={setTasks} isEditing={isEditing}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>, \r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}