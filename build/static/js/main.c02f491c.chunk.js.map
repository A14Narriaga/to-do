{"version":3,"sources":["components/TaskItem.tsx","components/DayItem.tsx","components/Task.ts","components/Form.tsx","components/App.tsx","index.tsx"],"names":["TaskItem","id","title","time","completed","handleTaskBtns","currentTask","taskClicked","className","onClick","DayItem","Task","this","Form","showModal","setShowModal","tasks","setTasks","isEditing","useState","setTitle","setTime","useEffect","myTask","find","task","onSubmit","e","preventDefault","placeholder","type","onChange","target","value","newTasks","map","editTask","nanoid","FILTER_MAP","all","active","filterkeys","Object","keys","initialState","JSON","parse","localStorage","getItem","filterInitialState","App","filter","setFilter","setIsEditing","showTaskBtns","setShowTaskBtns","showAddBtn","setShowAddBtn","setCurrentTask","setTaskClicked","setItem","stringify","filterkey","length","deleteTask","handleChangeCompleteTask","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c02f491c.chunk.js","sourcesContent":["\r\nconst TaskItem = (\r\n    { id, title, time, completed, handleTaskBtns, currentTask, taskClicked }: \r\n    { id: string, title: string, time: string, completed: boolean, handleTaskBtns: any, currentTask: string, taskClicked: boolean }\r\n) => {\r\n    return (\r\n        <div className={`task ${(currentTask===id && taskClicked)? \"taskSelected\": \"\"}`} onClick={() => handleTaskBtns(id)}>\r\n            <span>{completed ? <i className=\"fas fa-check-circle\"></i> : <i className=\"far fa-circle\"></i>}</span>\r\n            <div className=\"task-card\">\r\n                <p className=\"title\" id={`task-${id}`}>{title}</p>\r\n                <p className=\"time\">{time}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskItem\r\n","const DayItem = () => {\r\n    return (\r\n        <div className=\"card-day\">\r\n            <p className=\"day\">Mon</p>\r\n            <p className=\"num\" >26</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DayItem","class Task {\r\n    id: string\r\n    title: string\r\n    time: string\r\n    completed: boolean\r\n    constructor(id: string, title: string, time: string, completed: boolean) {\r\n        this.id = id\r\n        this.title = title\r\n        this.time = time\r\n        this.completed = completed\r\n    }\r\n}\r\n\r\nexport default Task","import { useState, useEffect } from \"react\"\r\nimport { nanoid } from \"nanoid\"\r\nimport Task from \"./Task\"\r\n\r\nconst Form = (\r\n    { showModal, setShowModal, tasks, setTasks, isEditing, currentTask }:\r\n        { showModal: string, setShowModal: any, tasks: Task[], setTasks: any, isEditing: boolean, currentTask: string }\r\n) => {\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [time, setTime] = useState('06:00')\r\n\r\n    useEffect(() => {\r\n        if (isEditing) {\r\n            const myTask = tasks.find(task => task.id === currentTask)\r\n            if(myTask){\r\n                setTitle(myTask.title)\r\n                setTime(myTask.time)\r\n            }\r\n        }\r\n        else {\r\n            setTitle('')\r\n            setTime('06:00')\r\n        }\r\n    }, [isEditing, tasks, currentTask])\r\n\r\n    const addNewTask = () => {\r\n        setTasks([new Task(nanoid(3), title, time, false), ...tasks])\r\n        setShowModal('hidde')\r\n        setTitle('')\r\n        setTime('06:00')\r\n    }\r\n\r\n    const editTask = (id: string) => {\r\n        const newTasks = tasks.map(task => {\r\n            if (task.id === id)\r\n                return { ...task, title: title, time: time }\r\n            return task\r\n        })\r\n        setTasks(newTasks)\r\n        setShowModal('hidde')\r\n        setTitle('')\r\n        setTime('06:00')\r\n    }\r\n\r\n    const cancelBtn = () => {\r\n        setShowModal('hidde')\r\n    }\r\n\r\n    return (\r\n        <section className={`modal ${showModal}`}>\r\n            <form onSubmit={(e) => e.preventDefault()}>\r\n                <p>{!isEditing ? 'New' : 'Edit'} Task</p>\r\n                <div className=\"inputs\">\r\n                    <input placeholder=\"What's the plan for today ?\" type=\"text\" onChange={(e) => setTitle(e.target.value)} id=\"myTask\" value={title} />\r\n                    <input type=\"time\" onChange={(e) => setTime(e.target.value)} id=\"myTime\" value={time} />\r\n                </div>\r\n                <div className=\"options\">\r\n                    {!isEditing ?\r\n                        <button onClick={addNewTask}>Add</button> :\r\n                        <button onClick={() => editTask(currentTask)}>Edit</button>\r\n                    }\r\n                    <button onClick={cancelBtn} >Cancel</button>\r\n                </div>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import { useState, useEffect } from \"react\"\r\nimport \"../sass/App.scss\"\r\nimport Task from \"./Task\"\r\nimport TaskItem from \"./TaskItem\"\r\nimport DayItem from \"./DayItem\"\r\nimport Form from \"./Form\"\r\n\r\nconst FILTER_MAP = {\r\n    all: () => true,\r\n    active: (task: Task) => !task.completed,\r\n    completed: (task: Task) => task.completed\r\n}\r\ntype options = keyof typeof FILTER_MAP\r\nconst filterkeys = Object.keys(FILTER_MAP) as Array<options>\r\n\r\nconst initialState: Array<Task> = JSON.parse(localStorage.getItem(\"tasks\") || \"[]\")\r\nconst filterInitialState = (localStorage.getItem(\"filter\") || \"all\") as options\r\n\r\nconst App = () => {\r\n\r\n    const [tasks, setTasks] = useState(initialState)\r\n    const [filter, setFilter] = useState<options>(filterInitialState)\r\n    const [showModal, setShowModal] = useState('hidde')\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const [showTaskBtns, setShowTaskBtns] = useState('hidde')\r\n    const [showAddBtn, setShowAddBtn] = useState('')\r\n    const [currentTask, setCurrentTask] = useState('')\r\n    const [taskClicked, setTaskClicked] = useState(false)\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"tasks\", JSON.stringify(tasks))\r\n    }, [tasks])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"filter\", filter)\r\n    }, [filter])\r\n\r\n    const handleChangeCompleteTask = (id: string) => {\r\n        const newTasks = tasks.map(task => {\r\n            if (task.id === id)\r\n                return { ...task, completed: !task.completed }\r\n            return task\r\n        })\r\n        setTasks(newTasks)\r\n        setTaskClicked(false)\r\n        setShowTaskBtns('hidde')\r\n        setShowAddBtn('')\r\n    }\r\n\r\n    const deleteTask = (id: string) => {\r\n        const newTasks = tasks.filter(task => task.id !== id)\r\n        setTasks(newTasks)\r\n        setTaskClicked(false)\r\n        setShowTaskBtns('hidde')\r\n        setShowAddBtn('')\r\n    }\r\n\r\n    const handleShowModalAdd = () => {\r\n        setShowModal(showModal === 'hidde' ? '' : 'hidde')\r\n        setIsEditing(false)\r\n    }\r\n\r\n    const handleShowModalEdit = () => {\r\n        setShowModal(showModal === 'hidde' ? '' : 'hidde')\r\n        setIsEditing(true)\r\n    }\r\n\r\n    const handleTaskBtns = (id: string) => {\r\n        // console.log(id)\r\n        setCurrentTask(id)\r\n        setShowTaskBtns(showTaskBtns === 'hidde' ? '' : 'hidde')\r\n        setShowAddBtn(showAddBtn === 'hidde' ? '' : 'hidde')\r\n        setTaskClicked(taskClicked === false ? true : false)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header>Hello,</header>\r\n            <section className=\"calendar hidde\">\r\n                <p className=\"month\">April</p>\r\n                <section className=\"cards-days\">\r\n                    <DayItem />\r\n                </section>\r\n            </section>\r\n            <section className=\"card-tasks\">\r\n                <p className=\"num-tasks\">Tasks</p>\r\n                <section className=\"filters\">\r\n                    {filterkeys.map(filterkey => (\r\n                        <button key={filterkey} onClick={() => setFilter(filterkey)}>{filterkey}</button>\r\n                    ))}\r\n                </section>\r\n                <section className=\"tasks\">\r\n                    {tasks.length>0 ? \r\n                        tasks.filter(FILTER_MAP[filter]).map(({ id, title, time, completed }) => (\r\n                        <TaskItem \r\n                            key={id} \r\n                            id={id} \r\n                            title={title} \r\n                            time={time} \r\n                            completed={completed} \r\n                            handleTaskBtns={handleTaskBtns} \r\n                            currentTask={currentTask}\r\n                            taskClicked={taskClicked}\r\n                        />)) :\r\n                        <h1>Empty task list</h1>\r\n                    }\r\n                </section>\r\n            </section>\r\n            <div className=\"btn\">\r\n                <button className={`${showAddBtn}`} onClick={handleShowModalAdd} ><i className=\"fas fa-plus\"></i></button>\r\n                <button className={`${showTaskBtns}`} onClick={() => deleteTask(currentTask)}><i className=\"fas fa-trash-alt\"></i></button>\r\n                <button className={`${showTaskBtns}`} onClick={() => handleChangeCompleteTask(currentTask)}><i className=\"fas fa-check\"></i></button>\r\n                <button className={`${showTaskBtns}`} onClick={handleShowModalEdit}><i className=\"fas fa-edit\"></i></button>\r\n            </div>\r\n            <Form showModal={showModal} setShowModal={setShowModal} tasks={tasks} setTasks={setTasks} isEditing={isEditing} currentTask={currentTask} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>, \r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}