{"version":3,"sources":["components/Task.ts","components/TaskItem.tsx","components/DayItem.tsx","components/Form.tsx","components/App.tsx","index.tsx"],"names":["Task","id","title","time","completed","this","TaskItem","handleTaskBtns","className","onClick","DayItem","Form","showModal","setShowModal","tasks","setTasks","isEditing","currentTask","useState","setTitle","setTime","onSubmit","e","preventDefault","type","onChange","target","value","newTasks","map","t","editTask","nanoid","FILTER_MAP","all","active","task","filterkeys","Object","keys","initialState","App","filter","setFilter","setIsEditing","showTaskBtns","setShowTaskBtns","showAddBtn","setShowAddBtn","setCurrentTask","filterkey","deleteTask","handleChangeCompleteTask","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d97aa3b9.chunk.js","sourcesContent":["class Task {\r\n    id: string\r\n    title: string\r\n    time: string\r\n    completed: boolean\r\n    constructor(id: string, title: string, time: string, completed: boolean) {\r\n        this.id = id\r\n        this.title = title\r\n        this.time = time\r\n        this.completed = completed\r\n    }\r\n}\r\n\r\nexport default Task","\r\nconst TaskItem = (\r\n    { id, title, time, completed, handleTaskBtns }: \r\n    { id: string, title: string, time: string, completed: boolean, handleTaskBtns: any }\r\n) => {\r\n    return (\r\n        <div className=\"task taskSelected\" onClick={() => handleTaskBtns(id)}>\r\n            <span>{completed ? <i className=\"fas fa-check-circle\"></i> : <i className=\"far fa-circle\"></i>}</span>\r\n            <div className=\"task-card\">\r\n                <p className=\"title\" id={`task-${id}`}>{title}</p>\r\n                <p className=\"time\">{time}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskItem\r\n","const DayItem = () => {\r\n    return (\r\n        <div className=\"card-day\">\r\n            <p className=\"day\">Mon</p>\r\n            <p className=\"num\" >26</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DayItem","import { useState } from \"react\"\r\nimport { nanoid } from \"nanoid\"\r\nimport Task from \"./Task\"\r\n\r\nconst Form = (\r\n    { showModal, setShowModal, tasks, setTasks, isEditing, currentTask }:\r\n        { showModal: string, setShowModal: any, tasks: Task[], setTasks: any, isEditing: boolean, currentTask: string }\r\n) => {\r\n\r\n    const [title, setTitle] =  useState('')\r\n    const [time, setTime] = useState(isEditing ? '00:00' : '')\r\n\r\n    const addNewTask = () => {\r\n        setTasks([new Task(nanoid(3), title, time, false), ...tasks])\r\n        setShowModal('hidde')\r\n        setTitle('')\r\n        setTime('')\r\n    }\r\n\r\n    const editTask = (id: string) => {\r\n        const newTasks = tasks.map(t => {\r\n            if (t.id === id)\r\n                return {...t, title: title, time: time}\r\n            return t\r\n        })\r\n        setTasks(newTasks)\r\n        setShowModal('hidde')\r\n        setTitle('')\r\n        setTime('')\r\n    }\r\n\r\n    return (\r\n        <section className={`modal ${showModal}`}>\r\n            <form onSubmit={(e) => e.preventDefault()}>\r\n                <p>{!isEditing ? 'New' : 'Edit'} Task</p>\r\n                <div className=\"inputs\">\r\n                    <input type=\"text\" onChange={(e) => setTitle(e.target.value)} id=\"myTask\" value={title} />\r\n                    <input type=\"time\" onChange={(e) => setTime(e.target.value)} id=\"myTime\" value={time} />\r\n                </div>\r\n                <div className=\"options\">\r\n                    {!isEditing ? \r\n                        <button onClick={addNewTask}>Add</button> :\r\n                        <button onClick={() => editTask(currentTask)}>Edit</button>\r\n                    }\r\n                    <button onClick={() => setShowModal('hidde')} >Cancel</button>\r\n                </div>\r\n            </form>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import { useState } from \"react\"\r\nimport \"../sass/App.scss\"\r\nimport Task from \"./Task\"\r\nimport TaskItem from \"./TaskItem\"\r\nimport DayItem from \"./DayItem\"\r\nimport Form from \"./Form\"\r\n\r\nconst FILTER_MAP = {\r\n    all: () => true,\r\n    active: (task: Task) => !task.completed,\r\n    completed: (task: Task) => task.completed\r\n}\r\ntype options = keyof typeof FILTER_MAP\r\nconst filterkeys = Object.keys(FILTER_MAP) as Array<options>\r\n\r\nconst initialState = [\r\n    new Task('0', 'leer pdf false', '05:00 PM', true),\r\n    new Task('1', 'leer pdf true', '08:00 PM', false),\r\n    new Task('2', 'leer pdf false', '10:00 PM', true)\r\n]\r\n\r\nconst App = () => {\r\n\r\n    const [tasks, setTasks] = useState(initialState)\r\n    const [filter, setFilter] = useState<options>('all')\r\n    const [showModal, setShowModal] = useState('hidde')\r\n    const [isEditing, setIsEditing] = useState(false)\r\n    const [showTaskBtns, setShowTaskBtns] = useState('hidde')\r\n    const [showAddBtn, setShowAddBtn] = useState('')\r\n    const [currentTask, setCurrentTask] = useState('')\r\n\r\n    const handleChangeCompleteTask = (id: string) => {\r\n        const newTasks = tasks.map(task => {\r\n            if (task.id === id)\r\n                return { ...task, completed: !task.completed }\r\n            return task\r\n        })\r\n        setTasks(newTasks)\r\n        setShowTaskBtns('hidde')\r\n        setShowAddBtn('')\r\n\r\n    }\r\n\r\n    const deleteTask = (id: string) => {\r\n        const newTasks = tasks.filter(task => task.id !== id)\r\n        setTasks(newTasks)\r\n        setShowTaskBtns('hidde')\r\n        setShowAddBtn('')\r\n    }\r\n\r\n    const handleShowModalAdd = () => {\r\n        setShowModal(showModal === 'hidde' ? '' : 'hidde')\r\n        setIsEditing(false)\r\n    }\r\n\r\n    const handleShowModalEdit = () => {\r\n        setShowModal(showModal === 'hidde' ? '' : 'hidde')\r\n        setIsEditing(true)\r\n        setShowTaskBtns('hidde')\r\n        setShowAddBtn('')\r\n    }\r\n\r\n    const handleTaskBtns = (id: string) => {\r\n        // console.log(id)\r\n        setCurrentTask(id)\r\n        setShowTaskBtns('')\r\n        setShowAddBtn('hidde')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header>Hello Alan,</header>\r\n            <section className=\"calendar\">\r\n                <p className=\"month\">April</p>\r\n                <section className=\"cards-days\">\r\n                    <DayItem />\r\n                </section>\r\n            </section>\r\n            <section className=\"card-tasks\">\r\n                <p className=\"num-tasks\">Tasks</p>\r\n                <section className=\"filters\">\r\n                    {filterkeys.map(filterkey => (\r\n                        <button key={filterkey} onClick={() => setFilter(filterkey)}>{filterkey}</button>\r\n                    ))}\r\n                </section>\r\n                <section className=\"tasks\">\r\n                    {tasks.filter(FILTER_MAP[filter]).map(({ id, title, time, completed }) => (\r\n                        <TaskItem key={id} id={id} title={title} time={time} completed={completed} handleTaskBtns={handleTaskBtns} />\r\n                    ))}\r\n                </section>\r\n            </section>\r\n            <div className=\"btn\">\r\n                <button className={`${showAddBtn}`} onClick={handleShowModalAdd} ><i className=\"fas fa-plus\"></i></button>\r\n                <button className={`${showTaskBtns}`} onClick={() => deleteTask(currentTask)}><i className=\"fas fa-trash-alt\"></i></button>\r\n                <button className={`${showTaskBtns}`} onClick={() => handleChangeCompleteTask(currentTask)}><i className=\"fas fa-check\"></i></button>\r\n                <button className={`${showTaskBtns}`} onClick={handleShowModalEdit}><i className=\"fas fa-edit\"></i></button>\r\n            </div>\r\n            <Form showModal={showModal} setShowModal={setShowModal} tasks={tasks} setTasks={setTasks} isEditing={isEditing} currentTask={currentTask} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>, \r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}