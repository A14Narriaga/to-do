{"version":3,"sources":["components/TaskItem.tsx","components/DayItem.tsx","components/App.tsx","index.tsx"],"names":["TaskItem","id","title","time","completed","className","DayItem","Task","this","FILTER_MAP","all","active","task","filterkeys","Object","keys","initialState","App","useState","tasks","setTasks","setFilter","show","setShow","map","filterkey","onClick","filter","newTasks","handleChangeCompleteTask","type","name","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72b6a815.chunk.js","sourcesContent":["\r\nconst TaskItem = ({ id, title, time, completed }: { id: number, title: string, time: string, completed: boolean }) => {\r\n    return (\r\n        <div className=\"task\">\r\n            <span>{completed ? <i className=\"fas fa-check-circle\"></i> : <i className=\"far fa-circle\"></i>}</span>\r\n            <div className=\"task-card\">\r\n                <p className=\"title\" id={`task-${id}`}>{title}</p>\r\n                <p className=\"time\">{time}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskItem\r\n","const DayItem = () => {\r\n    return (\r\n        <div className=\"card-day\">\r\n            <p className=\"day\">Mon</p>\r\n            <p className=\"num\" >26</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DayItem","import { useState } from \"react\"\r\nimport \"../sass/App.scss\"\r\nimport TaskItem from \"./TaskItem\"\r\nimport DayItem from \"./DayItem\"\r\n\r\nclass Task {\r\n    id: number\r\n    title: string\r\n    time: string\r\n    completed: boolean\r\n    constructor(id: number, title: string, time: string, completed: boolean) {\r\n        this.id = id\r\n        this.title = title\r\n        this.time = time\r\n        this.completed = completed\r\n    }\r\n}\r\n\r\nconst FILTER_MAP = {\r\n    all: () => true,\r\n    active: (task: Task) => !task.completed,\r\n    completed: (task: Task) => task.completed\r\n}\r\nconst filterkeys = Object.keys(FILTER_MAP);\r\n\r\nconst initialState = [\r\n    new Task(0, 'leer pdf false', '05:00 PM', true),\r\n    new Task(1, 'leer pdf true', '08:00 PM', false),\r\n    new Task(3, 'leer pdf false', '10:00 PM', true)\r\n]\r\n\r\nconst App = () => {\r\n\r\n    const [tasks, setTasks] = useState(initialState)\r\n    const [filter, setFilter] = useState('all')\r\n    const [show, setShow] = useState('hidde')\r\n\r\n    const handleChangeCompleteTask = (id: number) => {\r\n        const newTasks = tasks.map(task => {\r\n            if(task.id === id) \r\n                task.completed = !task.completed\r\n            return task\r\n        })\r\n        setTasks(newTasks)\r\n    }\r\n\r\n    const deleteTask = (id: number) => {\r\n        const newTasks = tasks.map(task => {\r\n            if(task.id === id) \r\n                task.completed = !task.completed\r\n            return task\r\n        })\r\n        setTasks(newTasks)\r\n    }\r\n\r\n    const addTask = (id: number) => {\r\n        const newTasks = tasks.map(task => {\r\n            if(task.id === id) \r\n                task.completed = !task.completed\r\n            return task\r\n        })\r\n        setTasks(newTasks)\r\n    }\r\n\r\n    const showModal = () => {\r\n        setShow(show === 'hidde' ? '' : 'hidde')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <header>Hello Alan,</header>\r\n            <section className=\"calendar\">\r\n                <p className=\"month\">April</p>\r\n                <section className=\"cards-days\">\r\n                    <DayItem />\r\n                    <DayItem />\r\n                    <DayItem />\r\n                    <DayItem />\r\n                    <DayItem />\r\n                </section>\r\n            </section>\r\n            <section className=\"card-tasks\">\r\n                <p className=\"num-tasks\">Tasks</p>\r\n                <section className=\"filters\">\r\n                    {filterkeys.map(filterkey =>(\r\n                        <button key={filterkey} onClick={() => setFilter(filterkey)}>{filterkey}</button>\r\n                    ))}\r\n                </section>\r\n                <section className=\"tasks\">\r\n                    {tasks.filter(FILTER_MAP['all']).map(({id, title, time, completed}) => (\r\n                        <TaskItem key={id} id={id} title={title} time={time} completed={completed}/>\r\n                    ))}\r\n                </section>\r\n            </section>\r\n            <div className=\"btn\">\r\n                <button onClick={() => showModal()} ><i className=\"fas fa-plus\"></i></button>\r\n                <button onClick={() => handleChangeCompleteTask(0)}><i className=\"fas fa-check\"></i></button>\r\n                <button><i className=\"fas fa-trash-alt\"></i></button>\r\n                <button><i className=\"fas fa-edit\"></i></button>\r\n            </div>\r\n            <section className={`modal ${show}`}>\r\n                <form>\r\n                    <p>New Task</p>\r\n                    <div className=\"inputs\">\r\n                        <input type=\"text\" name=\"myTask\" id=\"myTask\"/>\r\n                        <input type=\"time\" name=\"myTime\" id=\"myTime\"/>\r\n                    </div>\r\n                    <div className=\"options\">\r\n                        <button>Add</button>\r\n                        <button>Cancel</button>\r\n                    </div>\r\n                </form>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>, \r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}